# This is a basic workflow to help you get started with Actions

name: Pull Request Tests

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
    branches:
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  PullRequestTests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      QORUS_TOKEN: ${{ secrets.QORUS_TOKEN }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Get current time for the commit
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current_time
        with:
          format: YYYYMMDD-HH
          utcOffset: '+01:00'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Get repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Print head git commit message
        id: get_head_commit_message
        run: echo "::set-output name=HEAD_COMMIT_MESSAGE::$(git show -s --format=%s)"

      - uses: actions/setup-node@v3
        with:
          node-version: 20.11.0

      # Notify Discord to not restart server
      - name: Discord Warning
        env:
          DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK_DEV}}
          # Mention someone in the embeds
          DISCORD_EMBEDS: '[{ "color":16711680, "description": ":exclamation: Tests started, **please do not restart Qorus on Rippy** for the next 30 minutes." }]'
          DISCORD_AVATAR: 'https://github.com/qoretechnologies/qorus-vscode/blob/95ad81fa8654fe83bb41f68f4de42ae088298e59/public/q-symbol-small.png?raw=true'
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: '<@820316067921395752>'

      - name: Save release version to outputs
        id: save_release_version
        run: echo ::set-output name=version::$(node -pe "require('./package.json').version")

      - name: Installing modules
        id: install_modules
        run: |
          yarn install
          yarn install-playwright
          yarn build-storybook --quiet

      - name: Run build test
        run: |
          yarn build

      - name: Run unit tests
        run: |
          yarn test:ci

      - name: Serve Storybook and run tests
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
            "npx http-server storybook-static --port 6008 --silent" \
            "npx wait-on tcp:6008 && yarn test-storybook"

      - name: Bump version with timestamp and canary tag
        id: bump
        if: github.event.pull_request.labels.*.name == 'canary'
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          NEW_VERSION=$(npm version prerelease --preid=canary.$TIMESTAMP --no-git-tag-version)
          echo "New version: $NEW_VERSION"
          echo "::set-output name=version::$NEW_VERSION"

      - name: Publish canary version to NPM
        id: npm_publish
        if: github.event.pull_request.labels.*.name == 'canary'
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: canary
          access: public

      - name: Create comment with canary version
        uses: mshick/add-pr-comment@v2
        if: github.event.pull_request.labels.*.name == 'canary'
        with:
          message: |
            Canary version for this PR published: ${{ steps.bump.outputs.version }}
            ```sh
            yarn add @qoretechnologies/reqraft@${{ steps.bump.outputs.version }}
            ```

      - name: Publish to Chromatic
        id: chromatic_publish
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true
          allowConsoleErrors: true
          debug: true

      # Notify Discord with canary installation instruction if Success
      - name: Discord notification success
        env:
          DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK}}
          DISCORD_EMBEDS: '[{ "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },"url": "https://github.com/${{github.repository}}/commit/${{github.sha}}","fields": [{ "name": "Commit Message", "value": "${{ steps.get_head_commit_message.outputs.HEAD_COMMIT_MESSAGE }}"},{ "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },{ "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/pull/${{github.ref_name}})", "inline": true },{ "name": "Event", "value": "${{github.event_name}}", "inline": true },{ "name": "Author", "value": "[${{github.actor}}](https://github.com/${{github.actor}})", "inline": true },{ "name": "Job", "value": "${{github.job}}", "inline": true},{ "name": "Version", "value": "v${{ steps.save_release_version.outputs.version }}", "inline": true},{ "name": "", "value": "ü§ñ [Github Action](https://github.com/${{ github.repository}}/actions/runs/${{ github.run_id}}) üåê [View Site]( https://deploy-preview-${{ github.event.pull_request.number}}--magical-starburst-a8bdfc.netlify.app) üìô [Storybook](${{ steps.chromatic_publish.outputs.storybookUrl }}) üé® [Chromatic Tests](${{ steps.chromatic_publish.outputs.buildUrl }})"}],"color":65280,"footer":{"text": "Published at ${{steps.current_time.outputs.readableTime}}"}}]'
          DISCORD_AVATAR: 'https://github.com/qoretechnologies/qorus-vscode/blob/95ad81fa8654fe83bb41f68f4de42ae088298e59/public/q-symbol-small.png?raw=true'
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            :white_check_mark: Tests run #${{ github.run_number }} for [PR](${{ github.event.pull_request.html_url }}) triggered by ${{ github.triggering_actor }} 

            **Canary Version Installation:**
            ```
            yarn add @qoretechnologies/reqraft@${{ steps.bump.outputs.version }}
            ```
        if: success()

      # Notify Discord without canary installation instruction if Success
      - name: Discord notification success
        env:
          DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK}}
          DISCORD_EMBEDS: '[{ "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },"url": "https://github.com/${{github.repository}}/commit/${{github.sha}}","fields": [{ "name": "Commit Message", "value": "${{ steps.get_head_commit_message.outputs.HEAD_COMMIT_MESSAGE }}"},{ "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },{ "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/pull/${{github.ref_name}})", "inline": true },{ "name": "Event", "value": "${{github.event_name}}", "inline": true },{ "name": "Author", "value": "[${{github.actor}}](https://github.com/${{github.actor}})", "inline": true },{ "name": "Job", "value": "${{github.job}}", "inline": true},{ "name": "Version", "value": "v${{ steps.save_release_version.outputs.version }}", "inline": true},{ "name": "", "value": "ü§ñ [Github Action](https://github.com/${{ github.repository}}/actions/runs/${{ github.run_id}}) üåê [View Site]( https://deploy-preview-${{ github.event.pull_request.number}}--magical-starburst-a8bdfc.netlify.app) üìô [Storybook](${{ steps.chromatic_publish.outputs.storybookUrl }}) üé® [Chromatic Tests](${{ steps.chromatic_publish.outputs.buildUrl }})"}],"color":65280,"footer":{"text": "Published at ${{steps.current_time.outputs.readableTime}}"}}]'
          DISCORD_AVATAR: 'https://github.com/qoretechnologies/qorus-vscode/blob/95ad81fa8654fe83bb41f68f4de42ae088298e59/public/q-symbol-small.png?raw=true'
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            :white_check_mark: Tests run #${{ github.run_number }} for [PR](${{ github.event.pull_request.html_url }}) triggered by ${{ github.triggering_actor }}
        if: success()

      # Notify discord if failure
      - name: Discord notification failure
        env:
          DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK}}
          DISCORD_EMBEDS: '[{ "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },"url": "https://github.com/${{github.repository}}/commit/${{github.sha}}","fields": [{ "name": "Commit Message", "value": "${{ steps.get_head_commit_message.outputs.HEAD_COMMIT_MESSAGE }}"},{ "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },{ "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/pull/${{github.ref_name}})", "inline": true },{ "name": "Event", "value": "${{github.event_name}}", "inline": true },{ "name": "Author", "value": "[${{github.actor}}](https://github.com/${{github.actor}})", "inline": true },{ "name": "Job", "value": "${{github.job}}", "inline": true },{ "name": "Version", "value": "v${{ steps.save_release_version.outputs.version }}", "inline": true},{ "name": "", "value": "ü§ñ [Github Action](https://github.com/${{ github.repository}}/actions/runs/${{ github.run_id}})"}],"color":16711680,"footer":{"text": "Published at ${{steps.current_time.outputs.readableTime}}"}}]'
          DISCORD_AVATAR: 'https://github.com/qoretechnologies/qorus-vscode/blob/95ad81fa8654fe83bb41f68f4de42ae088298e59/public/q-symbol-small.png?raw=true'
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: ':exclamation: Tests run #${{ github.run_number }} for [PR](${{ github.event.pull_request.html_url }}) triggered by ${{ github.triggering_actor }} *failed*!'
        if: failure()

      - name: Discord notification safe to restart
        env:
          DISCORD_WEBHOOK: ${{secrets.DISCORD_WEBHOOK_DEV}}
          DISCORD_EMBEDS: '[{ "color":65280, "description": ":white_check_mark: Tests action finished. It is now safe to restart Qorus on Rippy." }]'
          DISCORD_AVATAR: 'https://github.com/qoretechnologies/qorus-vscode/blob/95ad81fa8654fe83bb41f68f4de42ae088298e59/public/q-symbol-small.png?raw=true'
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: '<@820316067921395752>'
        if: always()
